{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/Layout.js","user/Signup.js","user/Signin.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/AddCategory.js","admin/apiAdmin.js","admin/AddProduct.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","_ref","react_default","a","createElement","className","react_router_dom","style","to","user","role","react","cursor","onClick","next","removeItem","fetch","concat","method","then","response","console","log","catch","err","signout","push","Layout","_ref$title","title","_ref$description","description","children","core_Menu","Signup","_useState","useState","name","email","password","error","success","_useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","clickSubmit","preventDefault","headers","Accept","Content-Type","body","stringify","json","data","core_Layout","display","onChange","type","Signin","loading","redirectToReferrer","setItem","authenticate","react_router","Home","PrivateRoute","Component","component","rest","objectWithoutProperties","assign","render","props","state","from","Dashboard","_isAuthenticated$user","_id","AdminRoute","AdminDashboard","AddCategory","setName","_useState3","_useState4","setError","_useState5","_useState6","setSuccess","_isAuthenticated","token","e","userId","category","Authorization","createCategory","showSuccess","showError","onSubmit","autoFocus","required","AddProduct","price","categories","shipping","quantity","photo","createdProduct","redirectToProfile","formData","init","FormData","useEffect","files","set","product","createProduct","accept","map","c","i","key","Routes","exact","auth_PrivateRoute","auth_AdminRoute","ReactDOM","src_Routes","document","getElementById"],"mappings":"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","file":"static/js/main.9fc6f7f1.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport { API } from \"../config\";\r\n\r\n/**\r\n * fetcht die Daten von dem Front- zum Backend mit POST\r\n * @param {*} user der zum backend geschickt wird\r\n * @returns \r\n */\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\n/**\r\n * fetcht die Daten von dem Front- zum Backend mit POST\r\n * @param {*} user der zum backend geschickt wird\r\n * @returns \r\n */\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\n/**\r\n * Authentifiziert den benutzer und addiert ein token in das localstorage\r\n * @param {*} data \r\n * @param {*} next \r\n */\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\n/** Beim ausloggen nimmt das gespeicherte Token heraus\r\n * und leitet den nutzer zur /signout weiter über GET\r\n*/\r\nexport const signout = next => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"jwt\");\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method: \"GET\"\r\n        })\r\n            .then(response => {\r\n                console.log(\"signout\", response);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n};\r\n\r\n/**\r\n * jwt in den localstorage setzen, falls benutzer authentifiziert ist \r\n * sie wird z.B. benutzt, um auch in Menu zu zeigen, falls den Benutzer\r\n * authentiziert ist, dann wird das unaktive leiste nicht gezeigt\r\n * @returns das token von jwt\r\n */\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == \"undefined\") {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem(\"jwt\")) {\r\n        return JSON.parse(localStorage.getItem(\"jwt\"));\r\n    } else {\r\n        return false;\r\n    }\r\n};","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { signout, isAuthenticated } from \"../auth\";\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: \"#ff9900\" };\r\n    } else {\r\n        return { color: \"#ffffff\" };\r\n    }\r\n};\r\n/**\r\n * Erstellung der Hauptseite, mit den Leisten Hauptseite, Dashboard (admin und !admin),\r\n * Einloggen, Ausloggen, und registerieren\r\n * \r\n * history wird benutzt um das aktive seite hervorzuheben.\r\n * @param  param0 \r\n * @returns Das <div> element mit alle anderen Unterelemente ...\r\n */\r\nconst Menu = ({ history }) => (\r\n    <div>\r\n        <ul className=\"nav nav-tabs bg-primary\">\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/\")}\r\n                    to=\"/\"\r\n                >\r\n                    Hauptseite\r\n                </Link>\r\n            </li>\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/user/dashboard\")}\r\n                        to=\"/user/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/admin/dashboard\")}\r\n                        to=\"/admin/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {!isAuthenticated() && (\r\n                <Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signin\")}\r\n                            to=\"/signin\"\r\n                        >\r\n                            Einloggen\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signup\")}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Registerieren\r\n                        </Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n\r\n            {isAuthenticated() && (\r\n                <li className=\"nav-item\">\r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                        onClick={() =>\r\n                            signout(() => {\r\n                                history.push(\"/\");\r\n                            })\r\n                        }\r\n                    >\r\n                        Ausloggen\r\n                    </span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default withRouter(Menu);\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React from \"react\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst Layout = ({\r\n    title = \"Title\",\r\n    description = \"Description\",\r\n    className,\r\n    children\r\n}) => (\r\n    <div>\r\n        <Menu />\r\n        <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n);\r\n\r\nexport default Layout;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signup } from \"../auth\";\r\n\r\n/**\r\n * Das hier ist unser State. Immer wenn die Eingabe sich ändert, \r\n * dann wird diese (Change Event) aufgegriffen aus dem signupForm und\r\n * die state wird geändert.\r\n * Der Name, email, pass werden per Dafault leer sein\r\n * @returns \r\n */\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, success, error } = values;\r\n\r\n    /**\r\n     * Immer wenn eine Änderung in der input elemnt in der signup form \r\n     * D.h. wenn onChange aufgerufen wird, dann wird diese Methode ausgeführt.\r\n     * \r\n     * Das Event kann entweder den Name, die Email oder das Passwort sein. \r\n     * \r\n     * event.target.value: der Wert der Eingabe in handleChange, den von der signUpFrom oder\r\n     * irgendwelche andere Elemente, die benutzt werden können, herausgenommen wird\r\n     * \r\n     * Das setValues aus dem useState wird benutzt um den state zu ändern.\r\n     * @param {*} name ist dynamisch, kann immer anders eingegeben werden\r\n     * @returns das neue geänderte Wert (value)\r\n     */\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    /**\r\n     * wenn auf submit geklickt wird, dann werden die gehandelte Werte \r\n     * gesetzt.\r\n     * \r\n     * 1) preventDefault(), damit die Seite sich nicht immer aktualisiert, wenn \r\n     *    man auf das Btn klickt\r\n     * 2) signup(name,..) aus auth/index.js benutzen um die eingaben zu fetchen und sie an den backend zu senden.\r\n     *      -> wenn es klappt dann wird ein successMessage aufgezeigt, sonst \r\n     *          werden die values gesetzt und ein SuccessMessage aufgezeigt\r\n     * \r\n     * @param {*} event \r\n     */\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        signup({ name, email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    error: \"\",\r\n                    success: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Ein Form wird erstellt und diese werden 3 divs gehandelt:\r\n     * Name, email und passwort\r\n     * Ein button wurde auch erstellt um die neue werte zu registerieren\r\n     * @returns gibt ein Form-element zurück \r\n     */\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    onChange={handleChange(\"name\")}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Passwort</label>\r\n                <input\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Einreichen\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    /**\r\n * Aufzeigen einer Fehlermeldung\r\n * @returns  <div> mit der nachricht drine </div>\r\n */\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n    /**\r\n* Aufzeigen einer Meldung, wenn es true ist\r\n* @returns <div> mit der nachricht drine </div>\r\n*/\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: success ? \"\" : \"none\" }}\r\n        >\r\n            Ein neues Konto wurde erstellt. Bitte <Link to=\"/signin\">Loggen Sie ein</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Registerieren\"\r\n            description=\"Registerieren Sie sich zum Florentina\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showSuccess()}\r\n            {showError()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\n\r\n/**\r\n * wie signup aber hier wurde die email und pass per default gesetzt\r\n * @returns \r\n */\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: \"s0562218@htw-berlin.de\",\r\n        password: \"s123456789\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    /**\r\n * wenn auf submit geklickt wird, dann werden die gehandelte Werte \r\n * gesetzt.\r\n * \r\n * 1) preventDefault(), damit die Seite sich nicht immer aktualisiert, wenn \r\n *    man auf das Btn klickt\r\n * 2) signin(name,..) aus auth/index.js benutzen um die eingaben zu fetchen und sie an den backend zu senden.\r\n *      -> wenn es klappt dann wird ein successMessage aufgezeigt, sonst \r\n *          werden die values gesetzt und ein SuccessMessage aufgezeigt\r\n * 3) hier haben wir auch loading, damit es aufgezeigt wird, wenn \r\n * die Seite geloadet wird\r\n * \r\n * 4) Wenn der User authentisiert ist und admin zugriffsrechte hat,\r\n *  dann wird er/sie zu /admin/dashboard weitergeleitet.\r\n * Wenn sie einen normalen Nutzer sind, dann an /user/dashboard  weitergeleitet\r\n * das passiert mit der Verwendung von redirectToReferrrer in redirectUser\r\n * Der admin hat die nummer 1 zum ihm zugewiesen.\r\n * @param {*} event \r\n */\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false });\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * wie bei signUpForm\r\n     * @returns \r\n     */\r\n    const signInForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Passwort</label>\r\n                <input\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Einreichen\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    /**\r\n     * Aufzeigen einer Fehlermeldung\r\n     * @returns \r\n     */\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    /**\r\n     * bitte warten aufzeigen, wenn es auf true gesetzt ist\r\n     * @returns <div> mit bitte warten drinne </div>\r\n     */\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Bitte Warten...</h2>\r\n            </div>\r\n        );\r\n\r\n    /**\r\n     * leitet der Nutzer zum der richtigen Seite anhand ihre Zugriffsrechte\r\n     * @returns die richtige Seite \r\n     */\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Einloggen\"\r\n            description=\"Loggen Sie sich zum Florentina ein\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showLoading()}\r\n            {showError()}\r\n            {signInForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React from \"react\";\r\nimport Layout from \"./Layout\";\r\n\r\nconst Home = () => (\r\n    <Layout title=\"Hauptseite\" description=\"React E-commerce App\">\r\n        ...\r\n    </Layout>\r\n);\r\n\r\nexport default Home;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\n// to make the output of the component dynamich\r\n/**\r\n * Function Quelle: https://reactrouter.com/web/example/auth-workflow\r\n * \r\n * props is used here to unpack various types of properties accordingly\r\n * and makes passing the values to the component more flexible\r\n * Ex: var props = {x: 1, y:2, z:3 };--> <Component {...props} />\r\n * \r\n * if the user is authenticated the component is going to be returned\r\n * else redirect to the signin page\r\n * @param {*} param0 \r\n * @returns \r\n */\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Will have user links, user info, and purchase history\r\n * @returns the <div> containing the userLinks(), userInfo() and puchaseHistory()\r\n */\r\nconst Dashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Benutzer Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            Mein Einkaufswagen\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/profile/update\">\r\n                            Profil bearbeiten\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Benutzerinformationen</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Einkaufsverlauf</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">verlauf</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`Guten Tag ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\n/**\r\n * genauso wie bei privateRoute aber hier ist der user.role auch da, um \r\n * herauszufinden welche rolle der benutzer hat\r\n * @param {*} param0 \r\n * @returns \r\n */\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Kategorie erstellen\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Produkt erstellen\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Benutzerinformationen</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`Guten Tag ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createCategory } from \"./apiAdmin\";\r\n\r\n/**\r\n * \r\n * @returns the categoryForm, the success and error message and the link to go back to dashboard\r\n */\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    //Benutzer und Token von localStorage destrukturieren\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const handleChange = e => {\r\n        setError(\"\");\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(false);\r\n        // Eine Anfrage an die API senden, um eine Kategorie zu erstellen\r\n        createCategory(user._id, token, { name }).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setError(\"\");\r\n                setSuccess(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @returns A form element with a name, input field and a button\r\n     */\r\n    const newCategoryForm = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    autoFocus\r\n                    required\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Kategorie erstellen</button>\r\n        </form>\r\n    );\r\n\r\n    /**\r\n     * \r\n     * @returns A message to be shown by success\r\n     */\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\">{name} wurde erstellt</h3>;\r\n        }\r\n    };\r\n\r\n    /**\r\n  * \r\n  * @returns A message to be shown by Fehler\r\n  */\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Kategorie soll einzigartig sein</h3>;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @returns A link to go back to dashboard\r\n     */\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Zurück zum Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Füge eine neue Katogerie hinzu\"\r\n            description={`Guten Tag ${user.name}, sind Sie bereit eine neue Kategorie hinzufügen?`}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddCategory;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport { API } from \"../config\";\r\n\r\n/**\r\n * fetches the data in localhost/frontend/product/create/userId and post the response in the addCategory Component\r\n * @param {} userId \r\n * @param {*} token \r\n * @param {*} category \r\n * @returns \r\n */\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\n/** fetches the data in localhost/frontend/product/create/userId and post the response in the addCategory Component*/\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createProduct, getCategories } from \"./apiAdmin\";\r\n\r\n/**\r\n * \r\n * @returns values of the product info in their current state\r\n */\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        shipping: \"\",\r\n        quantity: \"\",\r\n        photo: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        createdProduct: \"\",\r\n        redirectToProfile: false,\r\n        formData: \"\"\r\n    });\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    // Kategorie aufladen und formData setzen\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value =\r\n            name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: \"\", loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    photo: \"\",\r\n                    price: \"\",\r\n                    quantity: \"\",\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Foto hochladen</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input\r\n                        onChange={handleChange(\"photo\")}\r\n                        type=\"file\"\r\n                        name=\"photo\"\r\n                        accept=\"image/*\"\r\n                    />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    onChange={handleChange(\"name\")}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Beschreibung</label>\r\n                <textarea\r\n                    onChange={handleChange(\"description\")}\r\n                    className=\"form-control\"\r\n                    value={description}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Preis</label>\r\n                <input\r\n                    onChange={handleChange(\"price\")}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={price}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Kategorie</label>\r\n                <select\r\n                    onChange={handleChange(\"category\")}\r\n                    className=\"form-control\"\r\n                >\r\n                    <option>Bitte auswählen</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Versand</label>\r\n                <select\r\n                    onChange={handleChange(\"shipping\")}\r\n                    className=\"form-control\"\r\n                >\r\n                    <option>Bite auswählen</option>\r\n                    <option value=\"0\">Nein</option>\r\n                    <option value=\"1\">Ja</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantität</label>\r\n                <input\r\n                    onChange={handleChange(\"quantity\")}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={quantity}\r\n                />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Produkt erstellen</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: createdProduct ? \"\" : \"none\" }}\r\n        >\r\n            <h2>{`${createdProduct}`} wurde erstellt!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Bitte Warten...</h2>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Füge ein neues Produkt hinzu\"\r\n            description={`Guten Tag ${user.name}, Sind Sie bereit ein neues Produkt hinzufügen?`}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Signup from \"./user/Signup\";\r\nimport Signin from \"./user/Signin\";\r\nimport Home from \"./core/Home\";\r\nimport PrivateRoute from \"./auth/PrivateRoute\";\r\nimport Dashboard from \"./user/UserDashboard\";\r\nimport AdminRoute from \"./auth/AdminRoute\";\r\nimport AdminDashboard from \"./user/AdminDashboard\";\r\nimport AddCategory from \"./admin/AddCategory\";\r\nimport AddProduct from \"./admin/AddProduct\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <PrivateRoute\r\n                    path=\"/user/dashboard\"\r\n                    exact\r\n                    component={Dashboard}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/admin/dashboard\"\r\n                    exact\r\n                    component={AdminDashboard}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/create/category\"\r\n                    exact\r\n                    component={AddCategory}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/create/product\"\r\n                    exact\r\n                    component={AddProduct}\r\n                />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}