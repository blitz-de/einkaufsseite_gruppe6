{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/cartHelpers.js","core/Layout.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/AddCategory.js","admin/apiAdmin.js","admin/AddProduct.js","core/Checkbox.js","core/RadioBox.js","core/fixedPrices.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","_ref","react_default","a","createElement","className","react_router_dom","style","to","length","user","role","react","cursor","onClick","next","removeItem","fetch","concat","method","then","response","console","log","catch","err","signout","push","Layout","_ref$title","title","_ref$description","description","children","core_Menu","Signup","_useState","useState","name","email","password","error","success","_useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","clickSubmit","preventDefault","headers","Accept","Content-Type","body","stringify","json","data","core_Layout","display","onChange","type","Signin","loading","redirectToReferrer","setItem","authenticate","react_router","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","arguments","undefined","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","_ref$showViewProductB","showViewProductButton","_ref$showAddToCartBut","showAddToCartButton","_ref$cartUpdate","cartUpdate","_ref$showRemoveProduc","showRemoveProductButton","redirect","setRedirect","_useState3","count","_useState4","setCount","addToCart","cart","Array","from","Set","map","p","id","find","addItem","productId","i","updateItem","shouldRedirect","core_ShowImage","substring","price","category","moment","locale","createdAt","fromNow","quantity","showViewButton","showAddToCart","splice","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","searchData","params","query","queryString","list","searchSubmit","e","_objectSpread2","onSubmit","c","key","placeholder","border","searchMessage","core_Card","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","_useState5","_useState6","setError","core_Search","PrivateRoute","Component","component","rest","objectWithoutProperties","assign","render","props","state","Dashboard","_isAuthenticated$user","AdminRoute","AdminDashboard","AddCategory","setName","setSuccess","_isAuthenticated","token","userId","Authorization","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","init","FormData","files","set","createProduct","accept","Checkbox","handleFilters","checked","setChecked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","toConsumableArray","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","_useState7","_useState8","_useState9","_useState10","setSkip","_useState11","_useState12","size","setSize","_useState13","_useState14","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","core_Checkbox","core_RadioBox","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","match","Checkout","products","clientToken","instance","address","getToken","getBraintreeClientToken","getTotal","reduce","currentValue","nextValue","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","message","showDropIn","onBlur","lib_default","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","core_Checkout","Routes","exact","auth_PrivateRoute","auth_AdminRoute","ReactDOM","src_Routes","document","getElementById"],"mappings":"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","file":"static/js/main.b421f801.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import { API } from \"../config\";\r\n\r\n /**\r\n  * fetcht die Daten von dem Front- zum Backend mit POST\r\n  * @param {*} user der zum backend geschickt wird\r\n  * @returns \r\n  */\r\n export const signup = user => {\r\n     return fetch(`${API}/signup`, {\r\n         method: \"POST\",\r\n         headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\"\r\n         },\r\n         body: JSON.stringify(user)\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => {\r\n             console.log(err);\r\n         });\r\n };\r\n \r\n /**\r\n  * fetcht die Daten von dem Front- zum Backend mit POST\r\n  * @param {*} user der zum backend geschickt wird\r\n  * @returns \r\n  */\r\n export const signin = user => {\r\n     return fetch(`${API}/signin`, {\r\n         method: \"POST\",\r\n         headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\"\r\n         },\r\n         body: JSON.stringify(user)\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => {\r\n             console.log(err);\r\n         });\r\n };\r\n \r\n /**\r\n  * Authentifiziert den benutzer und addiert ein token in das localstorage\r\n  * @param {*} data \r\n  * @param {*} next \r\n  */\r\n export const authenticate = (data, next) => {\r\n     if (typeof window !== \"undefined\") {\r\n         localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n         next();\r\n     }\r\n };\r\n \r\n /** Beim ausloggen nimmt das gespeicherte Token heraus\r\n  * und leitet den nutzer zur /signout weiter über GET\r\n */\r\n export const signout = next => {\r\n     if (typeof window !== \"undefined\") {\r\n         localStorage.removeItem(\"jwt\");\r\n         next();\r\n         return fetch(`${API}/signout`, {\r\n             method: \"GET\"\r\n         })\r\n             .then(response => {\r\n                 console.log(\"signout\", response);\r\n             })\r\n             .catch(err => console.log(err));\r\n     }\r\n };\r\n \r\n /**\r\n  * jwt in den localstorage setzen, falls benutzer authentifiziert ist \r\n  * sie wird z.B. benutzt, um auch in Menu zu zeigen, falls den Benutzer\r\n  * authentiziert ist, dann wird das unaktive leiste nicht gezeigt\r\n  * @returns das token von jwt\r\n  */\r\n export const isAuthenticated = () => {\r\n     if (typeof window == \"undefined\") {\r\n         return false;\r\n     }\r\n     if (localStorage.getItem(\"jwt\")) {\r\n         return JSON.parse(localStorage.getItem(\"jwt\"));\r\n     } else {\r\n         return false;\r\n     }\r\n };","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { Fragment } from \"react\";\r\n import { Link, withRouter } from \"react-router-dom\";\r\n import { signout, isAuthenticated } from \"../auth\";\r\n import { itemTotal } from \"./cartHelpers\";\r\n \r\n \r\n const isActive = (history, path) => {\r\n     if (history.location.pathname === path) {\r\n         return { color: \"#ff9900\" };\r\n     } else {\r\n         return { color: \"#ffffff\" };\r\n     }\r\n };\r\n /**\r\n  * Erstellung der Hauptseite, mit den Leisten Hauptseite, Dashboard (admin und !admin),\r\n  * Einloggen, Ausloggen, und registerieren\r\n  * \r\n  * history wird benutzt um das aktive seite hervorzuheben.\r\n  * @param  param0 \r\n  * @returns Das <div> element mit alle anderen Unterelemente ...\r\n  */\r\n const Menu = ({ history }) => (\r\n     <div>\r\n         <ul className=\"nav nav-tabs bg-primary\">\r\n             <li className=\"nav-item\">\r\n                 <Link\r\n                     className=\"nav-link\"\r\n                     style={isActive(history, \"/\")}\r\n                     to=\"/\"\r\n                 >\r\n                     Hauptseite\r\n                 </Link>\r\n             </li>\r\n \r\n             <li className=\"nav-item\">\r\n                 <Link\r\n                     className=\"nav-link\"\r\n                     style={isActive(history, \"/shop\")}\r\n                     to=\"/shop\"\r\n                 >\r\n                     Shop\r\n                 </Link>\r\n             </li>\r\n \r\n             <li className=\"nav-item\">\r\n                 <Link\r\n                     className=\"nav-link\"\r\n                     style={isActive(history, \"/cart\")}\r\n                     to=\"/cart\"\r\n                 >\r\n                     Einkaufswagen{\" \"}\r\n                     <sup>\r\n                         <small className=\"cart-badge\">{itemTotal()}</small>\r\n                     </sup>\r\n                 </Link>\r\n             </li>\r\n \r\n             {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                 <li className=\"nav-item\">\r\n                     <Link\r\n                         className=\"nav-link\"\r\n                         style={isActive(history, \"/user/dashboard\")}\r\n                         to=\"/user/dashboard\"\r\n                     >\r\n                         Dashboard\r\n                     </Link>\r\n                 </li>\r\n             )}\r\n \r\n             {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                 <li className=\"nav-item\">\r\n                     <Link\r\n                         className=\"nav-link\"\r\n                         style={isActive(history, \"/admin/dashboard\")}\r\n                         to=\"/admin/dashboard\"\r\n                     >\r\n                         Dashboard\r\n                     </Link>\r\n                 </li>\r\n             )}\r\n \r\n             {!isAuthenticated() && (\r\n                 <Fragment>\r\n                     <li className=\"nav-item\">\r\n                         <Link\r\n                             className=\"nav-link\"\r\n                             style={isActive(history, \"/signin\")}\r\n                             to=\"/signin\"\r\n                         >\r\n                             Einloggen\r\n                         </Link>\r\n                     </li>\r\n \r\n                     <li className=\"nav-item\">\r\n                         <Link\r\n                             className=\"nav-link\"\r\n                             style={isActive(history, \"/signup\")}\r\n                             to=\"/signup\"\r\n                         >\r\n                             Registerieren\r\n                         </Link>\r\n                     </li>\r\n                 </Fragment>\r\n             )}\r\n \r\n             {isAuthenticated() && (\r\n                 <li className=\"nav-item\">\r\n                     <span\r\n                         className=\"nav-link\"\r\n                         style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                         onClick={() =>\r\n                             signout(() => {\r\n                                 history.push(\"/\");\r\n                             })\r\n                         }\r\n                     >\r\n                         Ausloggen\r\n                     </span>\r\n                 </li>\r\n             )}\r\n         </ul>\r\n     </div>\r\n );\r\n \r\n export default withRouter(Menu);\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n export const addItem = (item, next) => {\r\n    let cart = [];\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // Duplikate entfernen\r\n        // bildet ein Array von new Set und sie zum Array.form umwandeln\r\n        // damit man später sie nochmal mappen kann\r\n        // new set wird nur einzigartige Werte in sich erlauben\r\n        // deswegen sollte man die eindeutige id's von jeder Objekt/Produkt übergeben\r\n        // Wenn die Schleife versucht den gleichen Wert 2 Mal hinzufügen wird sie ignoriert\r\n        // ...mit dem Array von id's, die wir beim ersten Mappen erhalten haben\r\n        // map() nochmal ausführen und das aktuelle Produkt vom Cart zurückgeben\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"cart\")) {\r\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"cart\")) {\r\n            return JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"cart\");\r\n        next();\r\n    }\r\n};\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React from \"react\";\r\n import Menu from \"./Menu\";\r\n import '../styles.css'\r\n const Layout = ({\r\n     title = \"Title\",\r\n     description = \"Description\",\r\n     className,\r\n     children\r\n }) => (\r\n     <div>\r\n         <Menu />\r\n         <div className=\"jumbotron\">\r\n             <h2>{title}</h2>\r\n             <p className=\"lead\">{description}</p>\r\n         </div>\r\n         <div className={className}>{children}</div>\r\n     </div>\r\n );\r\n \r\n export default Layout;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import { Redirect, Link } from \"react-router-dom\";\r\n import Layout from \"../core/Layout\";\r\n import { signup } from \"../auth\";\r\n \r\n /**\r\n  * Das hier ist unser State. Immer wenn die Eingabe sich ändert, \r\n  * dann wird diese (Change Event) aufgegriffen aus dem signupForm und\r\n  * die state wird geändert.\r\n  * Der Name, email, pass werden per Dafault leer sein\r\n  * @returns \r\n  */\r\n const Signup = () => {\r\n     const [values, setValues] = useState({\r\n         name: \"\",\r\n         email: \"\",\r\n         password: \"\",\r\n         error: \"\",\r\n         success: false\r\n     });\r\n \r\n     const { name, email, password, success, error } = values;\r\n \r\n     /**\r\n      * Immer wenn eine Änderung in der input elemnt in der signup form \r\n      * D.h. wenn onChange aufgerufen wird, dann wird diese Methode ausgeführt.\r\n      * \r\n      * Das Event kann entweder den Name, die Email oder das Passwort sein. \r\n      * \r\n      * event.target.value: der Wert der Eingabe in handleChange, den von der signUpFrom oder\r\n      * irgendwelche andere Elemente, die benutzt werden können, herausgenommen wird\r\n      * \r\n      * Das setValues aus dem useState wird benutzt um den state zu ändern.\r\n      * @param {*} name ist dynamisch, kann immer anders eingegeben werden\r\n      * @returns das neue geänderte Wert (value)\r\n      */\r\n     const handleChange = name => event => {\r\n         setValues({ ...values, error: false, [name]: event.target.value });\r\n     };\r\n \r\n     /**\r\n      * wenn auf submit geklickt wird, dann werden die gehandelte Werte \r\n      * gesetzt.\r\n      * \r\n      * 1) preventDefault(), damit die Seite sich nicht immer aktualisiert, wenn \r\n      *    man auf das Btn klickt\r\n      * 2) signup(name,..) aus auth/index.js benutzen um die eingaben zu fetchen und sie an den backend zu senden.\r\n      *      -> wenn es klappt dann wird ein successMessage aufgezeigt, sonst \r\n      *          werden die values gesetzt und ein SuccessMessage aufgezeigt\r\n      * \r\n      * @param {*} event \r\n      */\r\n     const clickSubmit = event => {\r\n         event.preventDefault();\r\n         setValues({ ...values, error: false });\r\n         signup({ name, email, password }).then(data => {\r\n             if (data.error) {\r\n                 setValues({ ...values, error: data.error, success: false });\r\n             } else {\r\n                 setValues({\r\n                     ...values,\r\n                     name: \"\",\r\n                     email: \"\",\r\n                     password: \"\",\r\n                     error: \"\",\r\n                     success: true\r\n                 });\r\n             }\r\n         });\r\n     };\r\n     /**\r\n      * Ein Form wird erstellt und diese werden 3 divs gehandelt:\r\n      * Name, email und passwort\r\n      * Ein button wurde auch erstellt um die neue werte zu registerieren\r\n      * @returns gibt ein Form-element zurück \r\n      */\r\n     const signUpForm = () => (\r\n         <form>\r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Name</label>\r\n                 <input\r\n                     onChange={handleChange(\"name\")}\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     value={name}\r\n                 />\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Email</label>\r\n                 <input\r\n                     onChange={handleChange(\"email\")}\r\n                     type=\"email\"\r\n                     className=\"form-control\"\r\n                     value={email}\r\n                 />\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Passwort</label>\r\n                 <input\r\n                     onChange={handleChange(\"password\")}\r\n                     type=\"password\"\r\n                     className=\"form-control\"\r\n                     value={password}\r\n                 />\r\n             </div>\r\n             <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                 Einreichen\r\n             </button>\r\n         </form>\r\n     );\r\n \r\n     /**\r\n  * Aufzeigen einer Fehlermeldung\r\n  * @returns  <div> mit der nachricht drine </div>\r\n  */\r\n     const showError = () => (\r\n         <div\r\n             className=\"alert alert-danger\"\r\n             style={{ display: error ? \"\" : \"none\" }}\r\n         >\r\n             {error}\r\n         </div>\r\n     );\r\n     /**\r\n * Aufzeigen einer Meldung, wenn es true ist\r\n * @returns <div> mit der nachricht drine </div>\r\n */\r\n     const showSuccess = () => (\r\n         <div\r\n             className=\"alert alert-info\"\r\n             style={{ display: success ? \"\" : \"none\" }}\r\n         >\r\n             Ein neues Konto wurde erstellt. Bitte <Link to=\"/signin\">Loggen Sie ein</Link>\r\n         </div>\r\n     );\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Registerieren\"\r\n             description=\"Registerieren Sie sich zum Florentina\"\r\n             className=\"container col-md-8 offset-md-2\"\r\n         >\r\n             {showSuccess()}\r\n             {showError()}\r\n             {signUpForm()}\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default Signup;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import { Redirect } from \"react-router-dom\";\r\n import Layout from \"../core/Layout\";\r\n import { signin, authenticate, isAuthenticated } from \"../auth\";\r\n \r\n /**\r\n  * wie signup aber hier wurde die email und pass per default gesetzt\r\n  * @returns \r\n  */\r\n const Signin = () => {\r\n     const [values, setValues] = useState({\r\n         email: \"s0562218@htw-berlin.de\",\r\n         password: \"s123456789\",\r\n         error: \"\",\r\n         loading: false,\r\n         redirectToReferrer: false\r\n     });\r\n \r\n     const { email, password, loading, error, redirectToReferrer } = values;\r\n     const { user } = isAuthenticated();\r\n \r\n     const handleChange = name => event => {\r\n         setValues({ ...values, error: false, [name]: event.target.value });\r\n     };\r\n \r\n     /**\r\n  * wenn auf submit geklickt wird, dann werden die gehandelte Werte \r\n  * gesetzt.\r\n  * \r\n  * 1) preventDefault(), damit die Seite sich nicht immer aktualisiert, wenn \r\n  *    man auf das Btn klickt\r\n  * 2) signin(name,..) aus auth/index.js benutzen um die eingaben zu fetchen und sie an den backend zu senden.\r\n  *      -> wenn es klappt dann wird ein successMessage aufgezeigt, sonst \r\n  *          werden die values gesetzt und ein SuccessMessage aufgezeigt\r\n  * 3) hier haben wir auch loading, damit es aufgezeigt wird, wenn \r\n  * die Seite geloadet wird\r\n  * \r\n  * 4) Wenn der User authentisiert ist und admin zugriffsrechte hat,\r\n  *  dann wird er/sie zu /admin/dashboard weitergeleitet.\r\n  * Wenn sie einen normalen Nutzer sind, dann an /user/dashboard  weitergeleitet\r\n  * das passiert mit der Verwendung von redirectToReferrrer in redirectUser\r\n  * Der admin hat die nummer 1 zum ihm zugewiesen.\r\n  * @param {*} event \r\n  */\r\n     const clickSubmit = event => {\r\n         event.preventDefault();\r\n         setValues({ ...values, error: false, loading: true });\r\n         signin({ email, password }).then(data => {\r\n             if (data.error) {\r\n                 setValues({ ...values, error: data.error, loading: false });\r\n             } else {\r\n                 authenticate(data, () => {\r\n                     setValues({\r\n                         ...values,\r\n                         redirectToReferrer: true\r\n                     });\r\n                 });\r\n             }\r\n         });\r\n     };\r\n \r\n     /**\r\n      * wie bei signUpForm\r\n      * @returns \r\n      */\r\n     const signInForm = () => (\r\n         <form>\r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Email</label>\r\n                 <input\r\n                     onChange={handleChange(\"email\")}\r\n                     type=\"email\"\r\n                     className=\"form-control\"\r\n                     value={email}\r\n                 />\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Passwort</label>\r\n                 <input\r\n                     onChange={handleChange(\"password\")}\r\n                     type=\"password\"\r\n                     className=\"form-control\"\r\n                     value={password}\r\n                 />\r\n             </div>\r\n             <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                 Einreichen\r\n             </button>\r\n         </form>\r\n     );\r\n \r\n     /**\r\n      * Aufzeigen einer Fehlermeldung\r\n      * @returns \r\n      */\r\n     const showError = () => (\r\n         <div\r\n             className=\"alert alert-danger\"\r\n             style={{ display: error ? \"\" : \"none\" }}\r\n         >\r\n             {error}\r\n         </div>\r\n     );\r\n \r\n     /**\r\n      * bitte warten aufzeigen, wenn es auf true gesetzt ist\r\n      * @returns <div> mit bitte warten drinne </div>\r\n      */\r\n     const showLoading = () =>\r\n         loading && (\r\n             <div className=\"alert alert-info\">\r\n                 <h2>Bitte Warten...</h2>\r\n             </div>\r\n         );\r\n \r\n     /**\r\n      * leitet der Nutzer zum der richtigen Seite anhand ihre Zugriffsrechte\r\n      * @returns die richtige Seite \r\n      */\r\n     const redirectUser = () => {\r\n         if (redirectToReferrer) {\r\n             if (user && user.role === 1) {\r\n                 return <Redirect to=\"/admin/dashboard\" />;\r\n             } else {\r\n                 return <Redirect to=\"/user/dashboard\" />;\r\n             }\r\n         }\r\n         if (isAuthenticated()) {\r\n             return <Redirect to=\"/\" />;\r\n         }\r\n     };\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Einloggen\"\r\n             description=\"Loggen Sie sich zum Florentina ein\"\r\n             className=\"container col-md-8 offset-md-2\"\r\n         >\r\n             {showLoading()}\r\n             {showError()}\r\n             {signInForm()}\r\n             {redirectUser()}\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default Signin;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import { API } from \"../config\";\r\n import queryString from \"query-string\";\r\n \r\n export const getProducts = sortBy => {\r\n     return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n         method: \"GET\"\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n \r\n export const getCategories = () => {\r\n     return fetch(`${API}/categories`, {\r\n         method: \"GET\"\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n \r\n export const getFilteredProducts = (skip, limit, filters = {}) => {\r\n     const data = {\r\n         limit,\r\n         skip,\r\n         filters\r\n     };\r\n     return fetch(`${API}/products/by/search`, {\r\n         method: \"POST\",\r\n         headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\"\r\n         },\r\n         body: JSON.stringify(data)\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => {\r\n             console.log(err);\r\n         });\r\n };\r\n \r\n export const list = params => {\r\n     const query = queryString.stringify(params);\r\n     console.log(\"query\", query);\r\n     return fetch(`${API}/products/search?${query}`, {\r\n         method: \"GET\"\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n \r\n export const read = productId => {\r\n     return fetch(`${API}/product/${productId}`, {\r\n         method: \"GET\"\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n \r\n export const listRelated = productId => {\r\n     return fetch(`${API}/products/related/${productId}`, {\r\n         method: \"GET\"\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n \r\n export const getBraintreeClientToken = (userId, token) => {\r\n     return fetch(`${API}/braintree/getToken/${userId}`, {\r\n         method: \"GET\",\r\n         headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\",\r\n             Authorization: `Bearer ${token}`\r\n         }\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n \r\n export const processPayment = (userId, token, paymentData) => {\r\n     return fetch(`${API}/braintree/payment/${userId}`, {\r\n         method: \"POST\",\r\n         headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\",\r\n             Authorization: `Bearer ${token}`\r\n         },\r\n         body: JSON.stringify(paymentData)\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React from \"react\";\r\n import { API } from \"../config\";\r\n \r\n const ShowImage = ({ item, url }) => (\r\n     <div className=\"product-img\">\r\n         <img\r\n             src={`${API}/${url}/photo/${item._id}`}\r\n             alt={item.name}\r\n             className=\"mb-3\"\r\n             style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n         />\r\n     </div>\r\n );\r\n \r\n export default ShowImage;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState } from \"react\";\r\n import { Link, Redirect } from \"react-router-dom\";\r\n import ShowImage from \"./ShowImage\";\r\n import moment from \"moment\";\r\n import { addItem, updateItem, removeItem } from \"./cartHelpers\";\r\n \r\n /**\r\n  * @param {*} param0 \r\n  * @returns the quantity of products, the viewButton , the add to card option\r\n  *           the remove option, and eventually an option to update the cart\r\n  */\r\n const Card = ({\r\n     product,\r\n     showViewProductButton = true,\r\n     showAddToCartButton = true,\r\n     cartUpdate = false,\r\n     showRemoveProductButton = false\r\n }) => {\r\n     const [redirect, setRedirect] = useState(false);\r\n     const [count, setCount] = useState(product.count);\r\n \r\n     /**\r\n      * Zeigt das \"Produkt anzeigen\" Button auf und leitet nach dem Klich auf das Produkt weiter\r\n      * @param {*} showViewProductButton \r\n      * @returns das bttn mit dem zugewiesen Link nach einem klick\r\n      */\r\n     const showViewButton = showViewProductButton => {\r\n         return (\r\n             showViewProductButton && (\r\n                 <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                     <button className=\"btn btn-outline-primary mt-2 mb-2\">\r\n                         Produkt anzeigen\r\n                     </button>\r\n                 </Link>\r\n             )\r\n         );\r\n     };\r\n     \r\n     /**\r\n      * when a product is added it will be redirected to /cart\r\n      */\r\n     const addToCart = () => {\r\n         addItem(product, () => {\r\n             setRedirect(true);\r\n         });\r\n     };\r\n     \r\n     /**\r\n      * \r\n      * @param {*} redirect \r\n      * @returns \r\n      */\r\n     const shouldRedirect = redirect => {\r\n         if (redirect) {\r\n             return <Redirect to=\"/cart\" />;\r\n         }\r\n     };\r\n     \r\n     /**\r\n      * \r\n      * @param {*} showAddToCartButton \r\n      * @returns button which adds the item (product) when clicked\r\n      */\r\n     const showAddToCart = showAddToCartButton => {\r\n         return (\r\n             showAddToCartButton && (\r\n                 <button\r\n                     onClick={addToCart}\r\n                     className=\"btn btn-outline-warning mt-2 mb-2\"\r\n                 >\r\n                     zum Einkaufswagen hinzufügen\r\n                 </button>\r\n             )\r\n         );\r\n     };\r\n     \r\n     /**\r\n      * \r\n      * @param {*} showRemoveProductButton \r\n      * @returns button which removes the item, when clicked\r\n      */\r\n     const showRemoveButton = showRemoveProductButton => {\r\n         return (\r\n             showRemoveProductButton && (\r\n                 <button\r\n                     onClick={() => removeItem(product._id)}\r\n                     className=\"btn btn-outline-danger mt-2 mb-2\"\r\n                 >\r\n                     Produkt entfernen\r\n                 </button>\r\n             )\r\n         );\r\n     };\r\n     \r\n     /**\r\n      * \r\n      * @param {*} quantity \r\n      * @returns if stock ain't empty show what we have, else there is nothing\r\n      */\r\n     const showStock = quantity => {\r\n         return quantity > 0 ? (\r\n             <span className=\"badge badge-primary badge-pill\">Im Lager</span>\r\n         ) : (\r\n             <span className=\"badge badge-primary badge-pill\">Nicht im Lager</span>\r\n         );\r\n     };\r\n     \r\n     /**\r\n      * an event handler which will update the items, when \r\n      * there's at least one item\r\n      * @param {} productId \r\n      * @returns \r\n      */\r\n     const handleChange = productId => event => {\r\n         setCount(event.target.value < 1 ? 1 : event.target.value);\r\n         if (event.target.value >= 1) {\r\n             updateItem(productId, event.target.value);\r\n         }\r\n     };\r\n \r\n     /**\r\n      * a div-element which will show the update options and also\r\n      * shows an input field where the count can be entered\r\n      * @param {*} cartUpdate \r\n      * @returns \r\n      */\r\n     const showCartUpdateOptions = cartUpdate => {\r\n         return (\r\n             cartUpdate && (\r\n                 <div>\r\n                     <div className=\"input-group mb-3\">\r\n                         <div className=\"input-group-prepend\">\r\n                             <span className=\"input-group-text\">\r\n                                 Quantität bearbeiten\r\n                             </span>\r\n                         </div>\r\n                         <input\r\n                             type=\"number\"\r\n                             className=\"form-control\"\r\n                             value={count}\r\n                             onChange={handleChange(product._id)}\r\n                         />\r\n                     </div>\r\n                 </div>\r\n             )\r\n         );\r\n     };\r\n \r\n     return (\r\n         <div className=\"card\">\r\n             <div className=\"card-header name\">{product.name}</div>\r\n             <div className=\"card-body\">\r\n                 {shouldRedirect(redirect)}\r\n                 <ShowImage item={product} url=\"product\" />\r\n                 <p className=\"lead mt-2\">\r\n                     {product.description.substring(0, 100)}\r\n                 </p>\r\n                 <p className=\"black-10\">{product.price} €</p>\r\n                 <p className=\"black-9\">\r\n                     Kategorie: {product.category && product.category.name}\r\n                 </p>\r\n                 <p className=\"black-8\">\r\n                     Hinzugefügt vor {moment.locale(\"de\"), moment(product.createdAt).fromNow()}\r\n                 </p>\r\n \r\n                 {showStock(product.quantity)}\r\n                 <br />\r\n \r\n                 {showViewButton(showViewProductButton)}\r\n \r\n                 {showAddToCart(showAddToCartButton)}\r\n \r\n                 {showRemoveButton(showRemoveProductButton)}\r\n \r\n                 {showCartUpdateOptions(cartUpdate)}\r\n             </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n export default Card;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import { getCategories, list } from \"./apiCore\";\r\n import Card from \"./Card\";\r\n \r\n /**\r\n  * \r\n  * @returns die gesuchte Produkte in einem div-element\r\n  */\r\n const Search = () => {\r\n     const [data, setData] = useState({\r\n         categories: [],\r\n         category: \"\",\r\n         search: \"\",\r\n         results: [],\r\n         searched: false\r\n     });\r\n     \r\n     // instead of having to write data.search, data.category etc..\r\n     const { categories, category, search, results, searched } = data;\r\n     \r\n     /**\r\n      * get all the categories from the backend\r\n      */\r\n     const loadCategories = () => {\r\n         getCategories().then(data => {\r\n             if (data.error) {\r\n                 console.log(data.error);\r\n             } else {\r\n                 setData({ ...data, categories: data });\r\n             }\r\n         });\r\n     };\r\n \r\n     useEffect(() => {\r\n         loadCategories();\r\n     }, []);\r\n     \r\n     const searchData = () => {\r\n         // console.log(search, category);\r\n         if (search) {\r\n             list({ search: search || undefined, category: category }).then(\r\n                 response => {\r\n                     if (response.error) {\r\n                         console.log(response.error);\r\n                     } else {\r\n                         setData({ ...data, results: response, searched: true });\r\n                     }\r\n                 }\r\n             );\r\n         }\r\n     };\r\n \r\n     const searchSubmit = e => {\r\n         e.preventDefault();\r\n         searchData();\r\n     };\r\n \r\n     const handleChange = name => event => {\r\n         setData({ ...data, [name]: event.target.value, searched: false });\r\n     };\r\n     \r\n     const searchMessage = (searched, results) => {\r\n         if (searched && results.length === 1) {\r\n             return `${results.length} Produkt wurde gefunden`\r\n         }\r\n         if (searched && results.length > 1) {\r\n             return `${results.length} Produkte wurden gefunden`;\r\n         }\r\n         if (searched && results.length < 1) {\r\n             return `Keine Produkte wurden gefunden`;\r\n         }\r\n     };\r\n     \r\n     /**\r\n      * \r\n      * @param {*} results \r\n      * @returns das Ergebnis alle Produkte, die gesucht werden verknuepft\r\n      *             mit einer Nachricht, ob proukte gefunden worden oder nicth\r\n      */\r\n     const searchedProducts = (results = []) => {\r\n         return (\r\n             <div>\r\n                 <h2 className=\"mt-4 mb-4\">\r\n                     {searchMessage(searched, results)}\r\n                 </h2>\r\n                 <div className=\"row\">\r\n                     {results.map((product, i) => (\r\n                         <Card key={i} product={product} />\r\n                     ))}\r\n                 </div>\r\n             </div>\r\n         );\r\n     };\r\n     \r\n     /**\r\n      * \r\n      * @returns ein Form-Element das eine Eingabe-Feld, Button zum Suchen, Select option aufzeigt\r\n      */\r\n     const searchForm = () => (\r\n         <form onSubmit={searchSubmit}>\r\n             <span className=\"input-group-text\">\r\n                 <div className=\"input-group input-group-lg\">\r\n                     <div className=\"input-group-prepend\">\r\n                         <select\r\n                             className=\"btn mr-2\"\r\n                             onChange={handleChange(\"category\")}\r\n                         >\r\n                             <option value=\"All\">Alle</option>\r\n                             {categories.map((c, i) => (\r\n                                 <option key={i} value={c._id}>\r\n                                     {c.name}\r\n                                 </option>\r\n                             ))}\r\n                         </select>\r\n                     </div>\r\n \r\n                     <input\r\n                         type=\"search\"\r\n                         className=\"form-control\"\r\n                         onChange={handleChange(\"search\")}\r\n                         placeholder=\"Search by name\"\r\n                     />\r\n                 </div>\r\n                 <div\r\n                     className=\"btn input-group-append\"\r\n                     style={{ border: \"none\" }}\r\n                 >\r\n                     <button className=\"input-group-text\">Suchen</button>\r\n                 </div>\r\n             </span>\r\n         </form>\r\n     );\r\n \r\n     return (\r\n         <div className=\"row\">\r\n             <div className=\"container mb-3\">{searchForm()}</div>\r\n             <div className=\"container-fluid mb-3\">\r\n                 {searchedProducts(results)}\r\n             </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n export default Search;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import Layout from \"./Layout\";\r\n import { getProducts } from \"./apiCore\";\r\n import Card from \"./Card\";\r\n import Search from \"./Search\";\r\n \r\n const Home = () => {\r\n     const [productsBySell, setProductsBySell] = useState([]);\r\n     const [productsByArrival, setProductsByArrival] = useState([]);\r\n     const [error, setError] = useState(false);\r\n \r\n     const loadProductsBySell = () => {\r\n         getProducts(\"sold\").then(data => {\r\n             if (data.error) {\r\n                 setError(data.error);\r\n             } else {\r\n                 setProductsBySell(data);\r\n             }\r\n         });\r\n     };\r\n \r\n     const loadProductsByArrival = () => {\r\n         getProducts(\"createdAt\").then(data => {\r\n             if (data.error) {\r\n                 setError(data.error);\r\n             } else {\r\n                 setProductsByArrival(data);\r\n             }\r\n         });\r\n     };\r\n \r\n     useEffect(() => {\r\n         loadProductsByArrival();\r\n         loadProductsBySell();\r\n     }, []);\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Hauptseite\"\r\n             description=\"Florentina Einkaufsseite\"\r\n             className=\"container-fluid\"\r\n         >\r\n             <Search />\r\n             <h2 className=\"mb-4\">Zuletzt angekommen</h2>\r\n             <div className=\"row\">\r\n                 {productsByArrival.map((product, i) => (\r\n                     <div key={i} className=\"col-4 mb-3\">\r\n                         <Card product={product} />\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n \r\n             <h2 className=\"mb-4\">Best verkaufte Produkte</h2>\r\n             <div className=\"row\">\r\n                 {productsBySell.map((product, i) => (\r\n                     <div key={i} className=\"col-4 mb-3\">\r\n                         <Card product={product} />\r\n                     </div>\r\n                 ))}\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n export default Home; ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { Component } from \"react\";\r\n import { Route, Redirect } from \"react-router-dom\";\r\n import { isAuthenticated } from \"./index\";\r\n \r\n // to make the output of the component dynamich\r\n /**\r\n  * Function Quelle: https://reactrouter.com/web/example/auth-workflow\r\n  * \r\n  * props is used here to unpack various types of properties accordingly\r\n  * and makes passing the values to the component more flexible\r\n  * Ex: var props = {x: 1, y:2, z:3 };--> <Component {...props} />\r\n  * \r\n  * if the user is authenticated the component is going to be returned\r\n  * else redirect to the signin page\r\n  * @param {*} param0 \r\n  * @returns \r\n  */\r\n const PrivateRoute = ({ component: Component, ...rest }) => (\r\n     <Route\r\n         {...rest}\r\n         render={props =>\r\n             isAuthenticated() ? (\r\n                 <Component {...props} />\r\n             ) : (\r\n                 <Redirect\r\n                     to={{\r\n                         pathname: \"/signin\",\r\n                         state: { from: props.location }\r\n                     }}\r\n                 />\r\n             )\r\n         }\r\n     />\r\n );\r\n \r\n export default PrivateRoute;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React from \"react\";\r\n import Layout from \"../core/Layout\";\r\n import { isAuthenticated } from \"../auth\";\r\n import { Link } from \"react-router-dom\";\r\n \r\n /**\r\n  * Will have user links, user info, and purchase history\r\n  * @returns the <div> containing the userLinks(), userInfo() and puchaseHistory()\r\n  */\r\n const Dashboard = () => {\r\n     const {\r\n         user: { _id, name, email, role }\r\n     } = isAuthenticated();\r\n \r\n     const userLinks = () => {\r\n         return (\r\n             <div className=\"card\">\r\n                 <h4 className=\"card-header\">Benutzer Links</h4>\r\n                 <ul className=\"list-group\">\r\n                     <li className=\"list-group-item\">\r\n                         <Link className=\"nav-link\" to=\"/cart\">\r\n                             Mein Einkaufswagen\r\n                         </Link>\r\n                     </li>\r\n                     <li className=\"list-group-item\">\r\n                         <Link className=\"nav-link\" to=\"/profile/update\">\r\n                             Profil bearbeiten\r\n                         </Link>\r\n                     </li>\r\n                 </ul>\r\n             </div>\r\n         );\r\n     };\r\n \r\n     const userInfo = () => {\r\n         return (\r\n             <div className=\"card mb-5\">\r\n                 <h3 className=\"card-header\">Benutzerinformationen</h3>\r\n                 <ul className=\"list-group\">\r\n                     <li className=\"list-group-item\">{name}</li>\r\n                     <li className=\"list-group-item\">{email}</li>\r\n                     <li className=\"list-group-item\">\r\n                         {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                     </li>\r\n                 </ul>\r\n             </div>\r\n         );\r\n     };\r\n \r\n     const purchaseHistory = () => {\r\n         return (\r\n             <div className=\"card mb-5\">\r\n                 <h3 className=\"card-header\">Einkaufsverlauf</h3>\r\n                 <ul className=\"list-group\">\r\n                     <li className=\"list-group-item\">verlauf</li>\r\n                 </ul>\r\n             </div>\r\n         );\r\n     };\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Dashboard\"\r\n             description={`Guten Tag ${name}!`}\r\n             className=\"container-fluid\"\r\n         >\r\n             <div className=\"row\">\r\n                 <div className=\"col-3\">{userLinks()}</div>\r\n                 <div className=\"col-9\">\r\n                     {userInfo()}\r\n                     {purchaseHistory()}\r\n                 </div>\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default Dashboard;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { Component } from \"react\";\r\n import { Route, Redirect } from \"react-router-dom\";\r\n import { isAuthenticated } from \"./index\";\r\n \r\n /**\r\n  * genauso wie bei privateRoute aber hier ist der user.role auch da, um \r\n  * herauszufinden welche rolle der benutzer hat\r\n  * @param {*} param0 \r\n  * @returns \r\n  */\r\n const AdminRoute = ({ component: Component, ...rest }) => (\r\n     <Route\r\n         {...rest}\r\n         render={props =>\r\n             isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                 <Component {...props} />\r\n             ) : (\r\n                 <Redirect\r\n                     to={{\r\n                         pathname: \"/signin\",\r\n                         state: { from: props.location }\r\n                     }}\r\n                 />\r\n             )\r\n         }\r\n     />\r\n );\r\n \r\n export default AdminRoute;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React from \"react\";\r\n import Layout from \"../core/Layout\";\r\n import { isAuthenticated } from \"../auth\";\r\n import { Link } from \"react-router-dom\";\r\n \r\n const AdminDashboard = () => {\r\n     const {\r\n         user: { _id, name, email, role }\r\n     } = isAuthenticated();\r\n \r\n     const adminLinks = () => {\r\n         return (\r\n             <div className=\"card\">\r\n                 <h4 className=\"card-header\">Admin Links</h4>\r\n                 <ul className=\"list-group\">\r\n                     <li className=\"list-group-item\">\r\n                         <Link className=\"nav-link\" to=\"/create/category\">\r\n                             Kategorie erstellen\r\n                         </Link>\r\n                     </li>\r\n                     <li className=\"list-group-item\">\r\n                         <Link className=\"nav-link\" to=\"/create/product\">\r\n                             Produkt erstellen\r\n                         </Link>\r\n                     </li>\r\n                 </ul>\r\n             </div>\r\n         );\r\n     };\r\n \r\n     const adminInfo = () => {\r\n         return (\r\n             <div className=\"card mb-5\">\r\n                 <h3 className=\"card-header\">Benutzerinformationen</h3>\r\n                 <ul className=\"list-group\">\r\n                     <li className=\"list-group-item\">{name}</li>\r\n                     <li className=\"list-group-item\">{email}</li>\r\n                     <li className=\"list-group-item\">\r\n                         {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                     </li>\r\n                 </ul>\r\n             </div>\r\n         );\r\n     };\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Dashboard\"\r\n             description={`Guten Tag ${name}!`}\r\n             className=\"container-fluid\"\r\n         >\r\n             <div className=\"row\">\r\n                 <div className=\"col-3\">{adminLinks()}</div>\r\n                 <div className=\"col-9\">{adminInfo()}</div>\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default AdminDashboard;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState } from \"react\";\r\n import Layout from \"../core/Layout\";\r\n import { isAuthenticated } from \"../auth\";\r\n import { Link } from \"react-router-dom\";\r\n import { createCategory } from \"./apiAdmin\";\r\n \r\n /**\r\n  * \r\n  * @returns the categoryForm, the success and error message and the link to go back to dashboard\r\n  */\r\n const AddCategory = () => {\r\n     const [name, setName] = useState(\"\");\r\n     const [error, setError] = useState(false);\r\n     const [success, setSuccess] = useState(false);\r\n \r\n     //Benutzer und Token von localStorage destrukturieren\r\n     const { user, token } = isAuthenticated();\r\n \r\n     const handleChange = e => {\r\n         setError(\"\");\r\n         setName(e.target.value);\r\n     };\r\n \r\n     const clickSubmit = e => {\r\n         e.preventDefault();\r\n         setError(\"\");\r\n         setSuccess(false);\r\n         // Eine Anfrage an die API senden, um eine Kategorie zu erstellen\r\n         createCategory(user._id, token, { name }).then(data => {\r\n             if (data.error) {\r\n                 setError(data.error);\r\n             } else {\r\n                 setError(\"\");\r\n                 setSuccess(true);\r\n             }\r\n         });\r\n     };\r\n \r\n     /**\r\n      * \r\n      * @returns A form element with a name, input field and a button\r\n      */\r\n     const newCategoryForm = () => (\r\n         <form onSubmit={clickSubmit}>\r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Name</label>\r\n                 <input\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     onChange={handleChange}\r\n                     value={name}\r\n                     autoFocus\r\n                     required\r\n                 />\r\n             </div>\r\n             <button className=\"btn btn-outline-primary\">Kategorie erstellen</button>\r\n         </form>\r\n     );\r\n \r\n     /**\r\n      * \r\n      * @returns A message to be shown by success\r\n      */\r\n     const showSuccess = () => {\r\n         if (success) {\r\n             return <h3 className=\"text-success\">{name} wurde erstellt</h3>;\r\n         }\r\n     };\r\n \r\n     /**\r\n   * \r\n   * @returns A message to be shown by Fehler\r\n   */\r\n     const showError = () => {\r\n         if (error) {\r\n             return <h3 className=\"text-danger\">Kategorie soll einzigartig sein</h3>;\r\n         }\r\n     };\r\n \r\n     /**\r\n      * \r\n      * @returns A link to go back to dashboard\r\n      */\r\n     const goBack = () => (\r\n         <div className=\"mt-5\">\r\n             <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                 Zurück zum Dashboard\r\n             </Link>\r\n         </div>\r\n     );\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Füge eine neue Katogerie hinzu\"\r\n             description={`Guten Tag ${user.name}, sind Sie bereit eine neue Kategorie hinzufügen?`}\r\n         >\r\n             <div className=\"row\">\r\n                 <div className=\"col-md-8 offset-md-2\">\r\n                     {showSuccess()}\r\n                     {showError()}\r\n                     {newCategoryForm()}\r\n                     {goBack()}\r\n                 </div>\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default AddCategory;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import { API } from \"../config\";\r\n\r\n /**\r\n  * fetches the data in localhost/frontend/product/create/userId and post the response in the addCategory Component\r\n  * @param {} userId \r\n  * @param {*} token \r\n  * @param {*} category \r\n  * @returns \r\n  */\r\n export const createCategory = (userId, token, category) => {\r\n     return fetch(`${API}/category/create/${userId}`, {\r\n         method: \"POST\",\r\n         headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\",\r\n             Authorization: `Bearer ${token}`\r\n         },\r\n         body: JSON.stringify(category)\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => {\r\n             console.log(err);\r\n         });\r\n };\r\n \r\n /** fetches the data in localhost/frontend/product/create/userId and post the response in the addCategory Component*/\r\n export const createProduct = (userId, token, product) => {\r\n     return fetch(`${API}/product/create/${userId}`, {\r\n         method: \"POST\",\r\n         headers: {\r\n             // sending form data and this why content-type is deleted. \"product\" is the form data\r\n             Accept: \"application/json\",\r\n             Authorization: `Bearer ${token}`\r\n         },\r\n         body: product\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => {\r\n             console.log(err);\r\n         });\r\n };\r\n \r\n export const getCategories = () => {\r\n     return fetch(`${API}/categories`, {\r\n         method: \"GET\"\r\n     })\r\n         .then(response => {\r\n             return response.json();\r\n         })\r\n         .catch(err => console.log(err));\r\n };\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import Layout from \"../core/Layout\";\r\n import { isAuthenticated } from \"../auth\";\r\n import { Link } from \"react-router-dom\";\r\n import { createProduct, getCategories } from \"./apiAdmin\";\r\n \r\n /**\r\n  * \r\n  * @returns values of the product info in their current state\r\n  */\r\n const AddProduct = () => {\r\n     const [values, setValues] = useState({\r\n         name: \"\",\r\n         description: \"\",\r\n         price: \"\",\r\n         categories: [],\r\n         category: \"\",\r\n         shipping: \"\",\r\n         quantity: \"\",\r\n         photo: \"\",\r\n         loading: false,\r\n         error: \"\",\r\n         createdProduct: \"\",\r\n         redirectToProfile: false,\r\n         formData: \"\"\r\n     });\r\n \r\n     const { user, token } = isAuthenticated();\r\n     const {\r\n         name,\r\n         description,\r\n         price,\r\n         categories,\r\n         category,\r\n         shipping,\r\n         quantity,\r\n         loading,\r\n         error,\r\n         createdProduct,\r\n         redirectToProfile,\r\n         formData\r\n     } = values;\r\n \r\n     // Kategorie aufladen und formData setzen\r\n     // everything in the state will go to the formData and the formData will go to the backend to create a new product\r\n     // \r\n     const init = () => {\r\n         getCategories().then(data => {\r\n             if (data.error) {\r\n                 setValues({ ...values, error: data.error });\r\n             } else {\r\n                 setValues({\r\n                     ...values,\r\n                     categories: data,\r\n                     formData: new FormData() \r\n                 });\r\n             }\r\n         });\r\n     };\r\n \r\n     useEffect(() => {\r\n         init();\r\n     }, []);\r\n \r\n     const handleChange = name => event => {\r\n         const value =\r\n             name === \"photo\" ? event.target.files[0] : event.target.value;\r\n         formData.set(name, value);\r\n         setValues({ ...values, [name]: value });\r\n     };\r\n \r\n     const clickSubmit = event => {\r\n         event.preventDefault();\r\n         setValues({ ...values, error: \"\", loading: true });\r\n \r\n         createProduct(user._id, token, formData).then(data => {\r\n             if (data.error) {\r\n                 setValues({ ...values, error: data.error });\r\n             } else {\r\n                 setValues({\r\n                     ...values,\r\n                     name: \"\",\r\n                     description: \"\",\r\n                     photo: \"\",\r\n                     price: \"\",\r\n                     quantity: \"\",\r\n                     loading: false,\r\n                     createdProduct: data.name\r\n                 });\r\n             }\r\n         });\r\n     };\r\n \r\n     /**\r\n      * \r\n      * @returns a form an input for a photo, another for text (name, preis and quantity), \r\n      * and for a text-area and the abiltiy to select between options (to choose category type and other props too)\r\n      */\r\n     const newPostForm = () => (\r\n         <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n             <h4>Foto hochladen</h4>\r\n             <div className=\"form-group\">\r\n                 <label className=\"btn btn-secondary\">\r\n                     <input\r\n                         onChange={handleChange(\"photo\")}\r\n                         type=\"file\"\r\n                         name=\"photo\"\r\n                         accept=\"image/*\"\r\n                     />\r\n                 </label>\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Name</label>\r\n                 <input\r\n                     onChange={handleChange(\"name\")}\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     value={name}\r\n                 />\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Beschreibung</label>\r\n                 <textarea\r\n                     onChange={handleChange(\"description\")}\r\n                     className=\"form-control\"\r\n                     value={description}\r\n                 />\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Preis</label>\r\n                 <input\r\n                     onChange={handleChange(\"price\")}\r\n                     type=\"number\"\r\n                     className=\"form-control\"\r\n                     value={price}\r\n                 />\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Kategorie</label>\r\n                 <select\r\n                     onChange={handleChange(\"category\")}\r\n                     className=\"form-control\"\r\n                 >\r\n                     <option>Bitte auswählen</option>\r\n                     {categories &&\r\n                         categories.map((c, i) => (\r\n                             <option key={i} value={c._id}>\r\n                                 {c.name}\r\n                             </option>\r\n                         ))}\r\n                 </select>\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Versand</label>\r\n                 <select\r\n                     onChange={handleChange(\"shipping\")}\r\n                     className=\"form-control\"\r\n                 >\r\n                     <option>Bite auswählen</option>\r\n                     <option value=\"0\">Nein</option>\r\n                     <option value=\"1\">Ja</option>\r\n                 </select>\r\n             </div>\r\n \r\n             <div className=\"form-group\">\r\n                 <label className=\"text-muted\">Quantität</label>\r\n                 <input\r\n                     onChange={handleChange(\"quantity\")}\r\n                     type=\"number\"\r\n                     className=\"form-control\"\r\n                     value={quantity}\r\n                 />\r\n             </div>\r\n \r\n             <button className=\"btn btn-outline-primary\">Produkt erstellen</button>\r\n         </form>\r\n     );\r\n    \r\n     const showError = () => (\r\n         <div\r\n             className=\"alert alert-danger\"\r\n             style={{ display: error ? \"\" : \"none\" }}\r\n         >\r\n             {error}\r\n         </div>\r\n     );\r\n \r\n     const showSuccess = () => (\r\n         <div\r\n             className=\"alert alert-info\"\r\n             style={{ display: createdProduct ? \"\" : \"none\" }}\r\n         >\r\n             <h2>{`${createdProduct}`} wurde erstellt!</h2>\r\n         </div>\r\n     );\r\n \r\n     const showLoading = () =>\r\n         loading && (\r\n             <div className=\"alert alert-success\">\r\n                 <h2>Bitte Warten...</h2>\r\n             </div>\r\n         );\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Füge ein neues Produkt hinzu\"\r\n             description={`Guten Tag ${user.name}, Sind Sie bereit ein neues Produkt hinzufügen?`}\r\n         >\r\n             <div className=\"row\">\r\n                 <div className=\"col-md-8 offset-md-2\">\r\n                     {showLoading()}\r\n                     {showSuccess()}\r\n                     {showError()}\r\n                     {newPostForm()}\r\n                 </div>\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default AddProduct;","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n\r\n /**\r\n  * Will create checkboxes for the categories, if one is clicked then\r\n  * the handleFilter will get the Categories bzw. products related to \r\n  * the chosen option\r\n  * @param {*} param0 \r\n  * @returns categories\r\n  */\r\n const Checkbox = ({ categories, handleFilters }) => {\r\n     const [checked, setChecked] = useState([]);\r\n \r\n     const handleToggle = c => () => {\r\n         // der erste Index oder -1 zurückgeben\r\n         const currentCategoryId = checked.indexOf(c);\r\n         const newCheckedCategoryId = [...checked];\r\n         // Falls \"currently checked\" war nicht bereit in \"checked\"State  dann push\r\n         // sonst pull/entfernen\r\n         if (currentCategoryId === -1) {\r\n             newCheckedCategoryId.push(c);\r\n         } else {\r\n             newCheckedCategoryId.splice(currentCategoryId, 1);\r\n         }\r\n        //  console.log(newCheckedCategoryId);\r\n         setChecked(newCheckedCategoryId);\r\n         handleFilters(newCheckedCategoryId);\r\n     };\r\n \r\n     return categories.map((c, i) => (\r\n         <li key={i} className=\"list-unstyled\">\r\n             <input\r\n                 onChange={handleToggle(c._id)}\r\n                 value={checked.indexOf(c._id === -1)}\r\n                 type=\"checkbox\"\r\n                 className=\"form-check-input\"\r\n             />\r\n             <label className=\"form-check-label\">{c.name}</label>\r\n         </li>\r\n     ));\r\n };\r\n \r\n export default Checkbox;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n\r\n const RadioBox = ({ prices, handleFilters }) => {\r\n     const [value, setValue] = useState(0);\r\n \r\n     const handleChange = event => {\r\n         handleFilters(event.target.value);\r\n         setValue(event.target.value); \r\n        //  console.log(event.target)\r\n     };\r\n \r\n     return prices.map((p, i) => (\r\n         <div key={i}>\r\n             <input\r\n                 onChange={handleChange}\r\n                 value={`${p._id}`}\r\n                 name={p}\r\n                 type=\"radio\"\r\n                 className=\"mr-2 ml-4\"\r\n             />\r\n             <label className=\"form-check-label\">{p.name}</label>\r\n         </div>\r\n     ));\r\n };\r\n \r\n export default RadioBox;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n export const prices = [\r\n    {\r\n        _id: 0,\r\n        name: \"Any\",\r\n        array: []\r\n    },\r\n    {\r\n        _id: 1,\r\n        name: \"0 € to 9 €\",\r\n        array: [0, 9]\r\n    },\r\n    {\r\n        _id: 2,\r\n        name: \"10 € to 19 €\",\r\n        array: [10, 19]\r\n    },\r\n    {\r\n        _id: 3,\r\n        name: \"20 € to 29 €\",\r\n        array: [20, 29]\r\n    },\r\n    {\r\n        _id: 4,\r\n        name: \"30 € to 39 €\",\r\n        array: [30, 39]\r\n    },\r\n    {\r\n        _id: 5,\r\n        name: \"More than 40 €\",\r\n        array: [40, 99]\r\n    }\r\n];\r\n","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import Layout from \"./Layout\";\r\n import Card from \"./Card\";\r\n import { getCategories, getFilteredProducts } from \"./apiCore\";\r\n import Checkbox from \"./Checkbox\";\r\n import RadioBox from \"./RadioBox\";\r\n import { prices } from \"./fixedPrices\";\r\n \r\n /**\r\n  * \r\n  * @returns a div element with different div containers: category filter, price filter and list of products\r\n  */\r\n const Shop = () => {\r\n     const [myFilters, setMyFilters] = useState({\r\n         filters: { category: [], price: [] }\r\n     });\r\n     const [categories, setCategories] = useState([]);\r\n     const [error, setError] = useState(false);\r\n     const [limit, setLimit] = useState(6);\r\n     const [skip, setSkip] = useState(0);\r\n     const [size, setSize] = useState(0);\r\n     const [filteredResults, setFilteredResults] = useState([]);\r\n \r\n     const init = () => {\r\n         getCategories().then(data => {\r\n             if (data.error) {\r\n                 setError(data.error);\r\n             } else {\r\n                 setCategories(data);\r\n             }\r\n         });\r\n     };\r\n     \r\n     /**\r\n      * Will get the filted results accordingly\r\n      * @param {*} newFilters \r\n      */\r\n     const loadFilteredResults = newFilters => {\r\n         // console.log(newFilters);\r\n         getFilteredProducts(skip, limit, newFilters).then(data => {\r\n             if (data.error) {\r\n                 setError(data.error);\r\n             } else {\r\n                 setFilteredResults(data.data);\r\n                 setSize(data.size);\r\n                 setSkip(0);\r\n             }\r\n         });\r\n     };\r\n     \r\n     /**\r\n      * If there are more products shown than the limit than\r\n      * one has the possibility to load more\r\n      */\r\n     const loadMore = () => {\r\n         let toSkip = skip + limit;\r\n         // console.log(newFilters);\r\n         getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n             if (data.error) {\r\n                 setError(data.error);\r\n             } else {\r\n                 setFilteredResults([...filteredResults, ...data.data]);\r\n                 setSize(data.size);\r\n                 setSkip(toSkip);\r\n             }\r\n         });\r\n     };\r\n     \r\n     /**\r\n      * \r\n      * @returns the button to show more items which one filters out using the method above\r\n      */\r\n     const loadMoreButton = () => {\r\n         return (\r\n             size > 0 &&\r\n             size >= limit && (\r\n                 <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                     Mehr zeigen...\r\n                 </button>\r\n             )\r\n         );\r\n     };\r\n \r\n     useEffect(() => {\r\n         init();\r\n         loadFilteredResults(skip, limit, myFilters.filters);\r\n     }, []);\r\n     \r\n     /**\r\n      * handles filters according to their price or category\r\n      * if the price === the price chosen in handlePrice then return \r\n      * new values of the filtered result\r\n      * @param {*} filters \r\n      * @param {*} filterBy \r\n      */\r\n     const handleFilters = (filters, filterBy) => {\r\n         // console.log(\"SHOP\", filters, filterBy);\r\n         const newFilters = { ...myFilters };\r\n         newFilters.filters[filterBy] = filters;\r\n \r\n         if (filterBy === \"price\") {\r\n             let priceValues = handlePrice(filters);\r\n             newFilters.filters[filterBy] = priceValues;\r\n         }\r\n         loadFilteredResults(myFilters.filters);\r\n         setMyFilters(newFilters);\r\n     };\r\n     \r\n     /**\r\n      * @param {*} value \r\n      * @returns \r\n      */\r\n     const handlePrice = value => {\r\n         const data = prices;\r\n         let array = [];\r\n \r\n         for (let key in data) {\r\n             if (data[key]._id === parseInt(value)) {\r\n                 array = data[key].array;\r\n             }\r\n         }\r\n         return array;\r\n     };\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Shop Seite\"\r\n             description=\"Suchen Sie und finden Sie Ihr lieblings Produkt\"\r\n             className=\"container-fluid\"\r\n         >\r\n             <div className=\"row\">\r\n                 <div className=\"col-4\">\r\n                     <h4>Mit Kategorien filtern</h4>\r\n                     <ul>\r\n                         <Checkbox\r\n                             categories={categories}\r\n                             handleFilters={filters =>\r\n                                 handleFilters(filters, \"category\")\r\n                             }\r\n                         />\r\n                     </ul>\r\n \r\n                     <h4>Mit Preispanne filtern</h4>\r\n                     <div>\r\n                         <RadioBox\r\n                             prices={prices}\r\n                             handleFilters={filters =>\r\n                                 handleFilters(filters, \"price\")\r\n                             }\r\n                         />\r\n                     </div>\r\n                 </div>\r\n \r\n                 <div className=\"col-8\">\r\n                     <h2 className=\"mb-4\">Produkte</h2>\r\n                     <div className=\"row\">\r\n                         {filteredResults.map((product, i) => (\r\n                             <div key={i} className=\"col-4 mb-3\">\r\n                                 <Card product={product} />\r\n                             </div>\r\n                         ))}\r\n                     </div>\r\n                     <hr />\r\n                     {loadMoreButton()}\r\n                 </div>\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default Shop;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import Layout from \"./Layout\";\r\n import { read, listRelated } from \"./apiCore\";\r\n import Card from \"./Card\";\r\n \r\n /**\r\n  * \r\n  * @param {*} props \r\n  * @returns das Einzeilprodukt worauf man geklickt hat und neben an\r\n  * die aehliche Produkte \r\n  */\r\n const Product = props => {\r\n     const [product, setProduct] = useState({});\r\n     const [relatedProduct, setRelatedProduct] = useState([]);\r\n     const [error, setError] = useState(false);\r\n    \r\n     /**\r\n      * Um ein einzelproduct zu laden\r\n      * @param {} productId \r\n      */\r\n     const loadSingleProduct = productId => {\r\n         read(productId).then(data => {\r\n             if (data.error) {\r\n                 setError(data.error);\r\n             } else {\r\n                 setProduct(data);\r\n                 // fetch ähnliche produkte\r\n                 listRelated(data._id).then(data => {\r\n                     if (data.error) {\r\n                         setError(data.error);\r\n                     } else {\r\n                         setRelatedProduct(data);\r\n                     }\r\n                 });\r\n             }\r\n         });\r\n     };\r\n \r\n     useEffect(() => {\r\n         const productId = props.match.params.productId;\r\n         loadSingleProduct(productId);\r\n     }, [props]);\r\n \r\n     return (\r\n         <Layout\r\n             title={product && product.name}\r\n             description={\r\n                 product &&\r\n                 product.description &&\r\n                 product.description.substring(0, 100)\r\n             }\r\n             className=\"container-fluid\"\r\n         >\r\n             <div className=\"row\">\r\n                 <div className=\"col-8\">\r\n                     {product && product.description && (\r\n                         <Card product={product} showViewProductButton={false} />\r\n                     )}\r\n                 </div>\r\n \r\n                 <div className=\"col-4\">\r\n                     <h4>Ähnliche Produkte</h4>\r\n                     {relatedProduct.map((p, i) => (\r\n                         <div className=\"mb-3\">\r\n                             <Card key={i} product={p} />\r\n                         </div>\r\n                     ))}\r\n                 </div>\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default Product;","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import {\r\n     getProducts,\r\n     getBraintreeClientToken,\r\n     processPayment\r\n } from \"./apiCore\";\r\n import { emptyCart } from \"./cartHelpers\";\r\n import Card from \"./Card\";\r\n import { isAuthenticated } from \"../auth\";\r\n import { Link } from \"react-router-dom\";\r\n import DropIn from \"braintree-web-drop-in-react\";\r\n \r\n const Checkout = ({ products }) => {\r\n     const [data, setData] = useState({\r\n         loading: false,\r\n         success: false,\r\n         clientToken: null,\r\n         error: \"\",\r\n         instance: {},\r\n         address: \"\"\r\n     });\r\n \r\n     const userId = isAuthenticated() && isAuthenticated().user._id;\r\n     const token = isAuthenticated() && isAuthenticated().token;\r\n \r\n     const getToken = (userId, token) => {\r\n         getBraintreeClientToken(userId, token).then(data => {\r\n             if (data.error) {\r\n                 setData({ ...data, error: data.error });\r\n             } else {\r\n                 setData({ clientToken: data.clientToken });\r\n             }\r\n         });\r\n     };\r\n \r\n     useEffect(() => {\r\n         getToken(userId, token);\r\n     }, []);\r\n \r\n     const getTotal = () => {\r\n         return products.reduce((currentValue, nextValue) => {\r\n             return currentValue + nextValue.count * nextValue.price;\r\n         }, 0);\r\n     };\r\n \r\n     const showCheckout = () => {\r\n         return isAuthenticated() ? (\r\n             <div>{showDropIn()}</div>\r\n         ) : (\r\n             <Link to=\"/signin\">\r\n                 <button className=\"btn btn-primary\">Loggen Sie ein, um auszuchecken</button>\r\n             </Link>\r\n         );\r\n     };\r\n \r\n     const buy = () => {\r\n         setData({ loading: true });\r\n         // senden um den Serven zu noncen\r\n         // nonce = data.instance.requestPaymentMethod()\r\n         let nonce;\r\n         let getNonce = data.instance\r\n             .requestPaymentMethod()\r\n             .then(data => {\r\n                 // console.log(data);\r\n                 nonce = data.nonce;\r\n                 // sobald man nonce hat (Kartetyp, Kartenummer) nonce senden als 'paymentMethodNonce'\r\n                 // and also total to be charged\r\n                 const paymentData = {\r\n                     paymentMethodNonce: nonce,\r\n                     amount: getTotal(products)\r\n                 };\r\n \r\n                 processPayment(userId, token, paymentData)\r\n                     .then(response => {\r\n                         console.log(response);\r\n                         setData({ ...data, success: response.success });\r\n                         emptyCart(() => {\r\n                             console.log(\"payment success and empty cart\");\r\n                             setData({ loading: false });\r\n                         });\r\n                         // Einkaufswagen entleeren\r\n \r\n                     })\r\n                     .catch(error => {\r\n                         console.log(error);\r\n                         setData({ loading: false });\r\n                     });\r\n             })\r\n             .catch(error => {\r\n                 // console.log(\"dropin error: \", error);\r\n                 setData({ ...data, error: error.message });\r\n             });\r\n     };\r\n \r\n     const showDropIn = () => (\r\n         <div onBlur={() => setData({ ...data, error: \"\" })}>\r\n             {data.clientToken !== null && products.length > 0 ? (\r\n                 <div>\r\n                     <DropIn\r\n                         options={{\r\n                             authorization: data.clientToken,\r\n                             paypal: {\r\n                                 flow: \"vault\"\r\n                             }\r\n                         }}\r\n                         onInstance={instance => (data.instance = instance)}\r\n                     />\r\n                     <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                         Zahlen\r\n                     </button>\r\n                 </div>\r\n             ) : null}\r\n         </div>\r\n     );\r\n \r\n     const showError = error => (\r\n         <div\r\n             className=\"alert alert-danger\"\r\n             style={{ display: error ? \"\" : \"none\" }}\r\n         >\r\n             {error}\r\n         </div>\r\n     );\r\n \r\n     const showSuccess = success => (\r\n         <div\r\n             className=\"alert alert-info\"\r\n             style={{ display: success ? \"\" : \"none\" }}\r\n         >\r\n             Danke! Ihre Zahlung war erfolgreich!\r\n         </div>\r\n     );\r\n \r\n     const showLoading = loading =>\r\n         loading && <h2 className=\"text-danger\">Bitte Warten...</h2>;\r\n \r\n     return (\r\n         <div>\r\n             <h2>Summe: ${getTotal()}</h2>\r\n             {showLoading(data.loading)}\r\n             {showSuccess(data.success)}\r\n             {showError(data.error)}\r\n             {showCheckout()}\r\n         </div>\r\n     );\r\n };\r\n \r\n export default Checkout;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React, { useState, useEffect } from \"react\";\r\n import { Link } from \"react-router-dom\";\r\n import Layout from \"./Layout\";\r\n import { getCart } from \"./cartHelpers\";\r\n import Card from \"./Card\";\r\n import Checkout from \"./Checkout\";\r\n \r\n /**\r\n  * @returns \r\n  */\r\n const Cart = () => {\r\n     const [items, setItems] = useState([]);\r\n    /**\r\n     * In useEffect wird  run uebergeben, sodass useEffect\r\n     * nur die Komponent aktualisiert, wenn sich das run state ändert\r\n     */\r\n     useEffect(() => {\r\n         setItems(getCart());\r\n     }, [items]);\r\n     \r\n     \r\n     const showItems = items => {\r\n         return (\r\n             <div>\r\n                 <h2>Ihr Einkaufswagen hat {`${items.length}`} Artikeln</h2>\r\n                 <hr />\r\n                 {items.map((product, i) => (\r\n                     <Card\r\n                         key={i}\r\n                         product={product}\r\n                         showAddToCartButton={false}\r\n                         cartUpdate={true}\r\n                         showRemoveProductButton={true}\r\n                     />\r\n                 ))}\r\n             </div>\r\n         );\r\n     };\r\n \r\n     const noItemsMessage = () => (\r\n         <h2>\r\n             Ihr Einkaufswagen ist leer. <br /> <Link to=\"/shop\">Weiter einkaufen</Link>\r\n         </h2>\r\n     );\r\n \r\n     return (\r\n         <Layout\r\n             title=\"Einkaufswagen\"\r\n             description=\"Einkaufswagen-Artikeln bearbeiten. Auschecken entfernen hinzufügen oder weiter einkaufen.\"\r\n             className=\"container-fluid\"\r\n         >\r\n             <div className=\"row\">\r\n                 <div className=\"col-6\">\r\n                     {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n                 </div>\r\n \r\n                 <div className=\"col-6\">\r\n                     <h2 className=\"mb-4\">Ihr Einkaufswagen-übersicht</h2>\r\n                     <hr />\r\n                     <Checkout products={items} />\r\n                 </div>\r\n             </div>\r\n         </Layout>\r\n     );\r\n };\r\n \r\n export default Cart;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React from \"react\";\r\n import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n import Signup from \"./user/Signup\";\r\n import Signin from \"./user/Signin\";\r\n import Home from \"./core/Home\";\r\n import PrivateRoute from \"./auth/PrivateRoute\";\r\n import Dashboard from \"./user/UserDashboard\";\r\n import AdminRoute from \"./auth/AdminRoute\";\r\n import AdminDashboard from \"./user/AdminDashboard\";\r\n import AddCategory from \"./admin/AddCategory\";\r\n import AddProduct from \"./admin/AddProduct\";\r\n import Shop from \"./core/Shop\";\r\n import Product from \"./core/Product\";\r\n import Cart from \"./core/Cart\";\r\n \r\n \r\n const Routes = () => {\r\n     return (\r\n         <BrowserRouter>\r\n             <Switch>\r\n                 <Route path=\"/\" exact component={Home} />\r\n                 <Route path=\"/shop\" exact component={Shop} />\r\n                 <Route path=\"/signin\" exact component={Signin} />\r\n                 <Route path=\"/signup\" exact component={Signup} />\r\n                 <PrivateRoute\r\n                     path=\"/user/dashboard\"\r\n                     exact\r\n                     component={Dashboard}\r\n                 />\r\n                 <AdminRoute\r\n                     path=\"/admin/dashboard\"\r\n                     exact\r\n                     component={AdminDashboard}\r\n                 />\r\n                 <AdminRoute\r\n                     path=\"/create/category\"\r\n                     exact\r\n                     component={AddCategory}\r\n                 />\r\n                 <AdminRoute\r\n                     path=\"/create/product\"\r\n                     exact\r\n                     component={AddProduct}\r\n                 />\r\n                 <Route path=\"/product/:productId\" exact component={Product} />\r\n                 <Route path=\"/cart\" exact component={Cart} />\r\n             </Switch>\r\n         </BrowserRouter>\r\n     );\r\n };\r\n \r\n export default Routes;\r\n ","/**\r\n * @author: Sakhr Al-absi\r\n * @Gruppe: 6\r\n * @Matrikelnummer: s0562218\r\n */\r\n import React from \"react\";\r\n import ReactDOM from \"react-dom\";\r\n import Routes from \"./Routes\";\r\n \r\n ReactDOM.render(<Routes />, document.getElementById(\"root\"));\r\n "],"sourceRoot":""}